{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Persons.js","services/getPersons.js","components/Error.js","components/Success.js","App.js","index.js"],"names":["Filter","filter","handleFilter","value","onChange","PersonForm","newName","newPhone","submitName","handleNameChange","handlePhoneChange","onSubmit","type","Persons","personsToShow","deletePerson","map","person","name","number","onClick","id","baseUrl","axios","get","then","response","data","newObject","post","delete","put","Error","message","className","Success","App","useState","persons","setPersons","setNewName","setNewPhone","setFilter","success","setSuccess","error","setError","useEffect","getPersons","initialPersons","nameExists","reduce","p","n","toLowerCase","includes","event","target","preventDefault","nameObject","find","window","confirm","returnedPerson","setTimeout","catch","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ff891241.chunk.js","sourcesContent":["import React from 'react'\n\nconst Filter = ({ filter, handleFilter }) => (\n\n    <>\n        filter shown with <input value={filter} onChange={handleFilter}></input>\n    </>\n\n)\n\nexport default Filter","import React from 'react'\n\nconst PersonForm = ({ newName, newPhone, submitName, handleNameChange, handlePhoneChange }) => (\n\n    <form onSubmit={submitName}>\n        <div>\n          name: <input value={newName} onChange={handleNameChange}/>\n        </div>\n        <div>\n          number: <input value={newPhone} onChange={handlePhoneChange}/>\n        </div>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n    </form>\n\n)\n\nexport default PersonForm","import React from 'react'\n\nconst Persons = ({ personsToShow, deletePerson }) => (\n\n    personsToShow.map(person =>\n        <p key={person.name}>\n          {person.name} {person.number} <button onClick={() => deletePerson(person.id)}>delete</button>\n        </p>  \n    )\n    \n)\n\nexport default Persons","import axios from 'axios'\nconst baseUrl = '/api/persons'\n\nconst getAll = () => {\n    const request = axios.get(baseUrl)\n    return request.then(response => response.data)\n}\n\nconst create = newObject => {\n    const request = axios.post(baseUrl, newObject)\n    return request.then(response => response.data)\n}\n\nconst remove = id => {\n    axios.delete(`${baseUrl}/${id}`)\n}\n\nconst update = (id, newObject) => {\n    const request = axios.put(`${baseUrl}/${id}`, newObject)\n    return request.then(response => response.data)\n}\n\nexport default { getAll, create, remove, update }","import React from 'react'\n\nconst Error = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n  \n    return (\n        <div className=\"msgError\">\n            {message}\n        </div>\n    )\n}\n\nexport default Error","import React from 'react'\n\nconst Success = ({ message }) => {\n    if (message === null) {\n        return null\n    }\n  \n    return (\n        <div className=\"msgSuccess\">\n            {message}\n        </div>\n    )\n}\n\nexport default Success","import React, { useEffect, useState } from 'react'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Persons from './components/Persons'\nimport getPersons from './services/getPersons'\nimport Error from './components/Error'\nimport Success from './components/Success'\n\nconst App = () => {\n  const [ persons, setPersons ] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newPhone, setNewPhone ] = useState('')\n  const [ filter, setFilter ] = useState('')\n  const [ success, setSuccess ] = useState(null)\n  const [ error, setError ] = useState(null)\n\n  const hook = () => {\n    getPersons\n      .getAll()\n      .then(initialPersons => {\n        setPersons(initialPersons)\n      })\n  }\n\n  useEffect(hook, [])\n\n  const nameExists = persons.reduce((p, n) => {\n    return (p || n.name === newName)\n  }, false)\n\n  const submitName = (event) => {\n    event.preventDefault()\n    const nameObject = {\n      name: newName,\n      number: newPhone\n    }\n\n    if (nameExists) {\n      const id = persons.find(p => p.name === newName).id\n      if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) {\n        getPersons\n          .update(id, nameObject)\n          .then(returnedPerson => {\n            setPersons(persons.map(p => p.id !== id ? p : returnedPerson))\n            setSuccess(`Updated ${newName}`)\n            setTimeout(() => setSuccess(null), 5000)\n            setNewName('')\n            setNewPhone('')\n          })\n          .catch(error => {\n            setError(`Information of ${newName} has already been removed from server`)\n            setTimeout(() => setError(null), 5000)\n          })\n      }\n    } else {\n      getPersons\n        .create(nameObject)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n          setSuccess(`Added ${newName}`)\n          setTimeout(() => setSuccess(null), 5000)\n          setNewName('')\n          setNewPhone('')\n        })\n        .catch(error => {\n          setError(error.response.data.error)\n          setTimeout(() => setError(null), 5000)\n        })\n    }    \n  }\n\n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handlePhoneChange = (event) => {\n    setNewPhone(event.target.value)\n  }\n\n  const handleFilter = (event) => {\n    setFilter(event.target.value)\n  }\n\n  const deletePerson = (id) => {\n    const name = persons.find(p => p.id === id).name\n    if (window.confirm(`Delete ${name} ?`)) {\n      getPersons.remove(id)\n      setPersons(persons.filter(p => p.id !== id))\n    }\n  }\n\n  const personsToShow = (filter === \"\")\n    ? persons\n    : persons.filter(person => person.name.toLowerCase().includes(filter.toLowerCase()))\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n\n      <Success message={success}/>\n      \n      <Error message={error} />\n\n      <Filter filter={filter} handleFilter={handleFilter}/>\n\n      <h3>Add a new</h3>\n      \n      <PersonForm\n        newName={newName}\n        newPhone={newPhone}\n        submitName={submitName}\n        handleNameChange={handleNameChange}\n        handlePhoneChange={handlePhoneChange}\n      />\n      \n      <h3>Numbers</h3>\n      \n      <Persons personsToShow={personsToShow} deletePerson={deletePerson} />\n    </div>\n  )\n}\n\nexport default App","import ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(\n  <App />, \n  document.getElementById('root')\n)"],"sourceRoot":""}